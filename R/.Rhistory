#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Gen decor_data dataframe for orthogonalized covariates
decor_data <- select_at(run_data, vars(ends_with("_sim0")))
# Run1
model1=lm(run_data$momrace1_sim1 ~ ., data=decor_data)
summary(model1)
# Predict
yhat <- predict(model1, newdata = decor_data) #[-c(2:7)])
# Replace
run_data$momrace1_sim1 <- yhat - run_data$momrace1_sim1
# Print
head(run_data$momrace1_sim1,15)
# Add block (or variable) to decor_data
decor_data <- cbind(decor_data, select_at(run_data, vars(ends_with("_sim1"))))
#Print
head(decor_data,3)
# Run2
model2=lm(run_data$mom_grade_seq2 ~ ., data=decor_data)
summary(model2)
ResultsTable=stargazer(model1,model2,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),column.labels=c("model1","model2"),model.names = FALSE, report="vc*")
#dep.var.labels=c("Extended Laplace")
# Save
#openxlsx::write.xlsx(ResultsTable,file= "Extended Laplace Results from R.xlsx")
#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Gen decor_data dataframe for orthogonalized covariates
decor_data <- select_at(run_data, vars(ends_with("_sim0")))
# Run1
model1=lm(run_data$momrace1_sim1 ~ ., data=decor_data)
summary(model1)
# Predict
yhat <- predict(model1, newdata = decor_data) #[-c(2:7)])
# Replace
run_data$momrace1_sim1 <- yhat - run_data$momrace1_sim1
# Print
head(run_data$momrace1_sim1,15)
# Add block (or variable) to decor_data
decor_data <- cbind(decor_data, select_at(run_data, vars(ends_with("_sim1"))))
#Print
head(decor_data,3)
# Run2
model2=lm(run_data$mom_grade_seq2 ~ ., data=decor_data)
summary(model2)
ResultsTable=stargazer(model1,model2,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),column.labels=c("model1","model2"),model.names = FALSE, report="vc*")
#dep.var.labels=c("Extended Laplace")
# Save
openxlsx::write.xlsx(ResultsTable,file= "Extended Laplace Results from R.xlsx")
ResultsTable=stargazer(model1,model2,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Generate two lists (compare and intermediate)
int_list <- list()
comp_list < list()
#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Generate two lists (compare and intermediate)
int_list <- list()
comp_list <- list()
# Center and drop zero variance
# Gen decor_data dataframe for orthogonalized covariates
decor_data <- select_at(run_data, vars(ends_with("_sim0")))
# Run1
int_list$model1=lm(run_data$momrace1_sim1 ~ ., data=decor_data)
summary(model1)
summary(int_list$model1)
#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Generate two lists (compare and intermediate)
int_list <- list()
comp_list <- list()
# Center and drop zero variance
# Gen decor_data dataframe for orthogonalized covariates
decor_data <- select_at(run_data, vars(ends_with("_sim0")))
# Run1
int_list$model1=lm(run_data$momrace1_sim1 ~ ., data=decor_data)
#summary(int_list$model1)
# Check R^2 and drop model if above threshold
# Predict
yhat <- predict(model1, newdata = decor_data) #[-c(2:7)])
#Install if it's your first run
first_run <- 0
if (first_run) {
install.packages(c("tidyverse", 'dplyr', 'stargzer'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
# ORDER
col_order <- c("cpubid", "momid", "year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
# Generate two lists (compare and intermediate)
int_list <- list()
comp_list <- list()
# Center and drop zero variance
# Gen decor_data dataframe for orthogonalized covariates
decor_data <- select_at(run_data, vars(ends_with("_sim0")))
# Run1
int_list$model1=lm(run_data$momrace1_sim1 ~ ., data=decor_data)
#summary(int_list$model1)
# Check R^2 and drop model if above threshold
# Predict
yhat <- predict(int_list$model1, newdata = decor_data) #[-c(2:7)])
# Replace
run_data$momrace1_sim1 <- yhat - run_data$momrace1_sim1
# Print
#head(run_data$momrace1_sim1,15)
# Add block (or variable) to decor_data
decor_data <- cbind(decor_data, select_at(run_data, vars(ends_with("_sim1"))))
#Print
#head(decor_data,3)
# Run2
int_list$model2=lm(run_data$mom_grade_seq2 ~ ., data=decor_data)
#summary(int_list$model2)
ResultsTable=stargazer(int_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
#dep.var.labels=c("Extended Laplace")
#column.labels=c("model1","model2")
# Save
openxlsx::write.xlsx(ResultsTable,file= "Extended Laplace Results from R.xlsx")
ResultsTable=stargazer(comp_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
# Save
openxlsx::write.xlsx(ResultsTable,file= "Extended Laplace Results from R.xlsx")
df <- data.frame(x=c(12,14,56,34,45,45))
rownames(df) <- c("AndyBullxxx", "AlexPullxcx","AndyPamxvb", "RickRalldfg","AndyPantert","SamSaltedf")
## see what grep does
grep("^Andy",rownames(df))
indvars <- select_at(run_data, vars(contains("_s")))
int_list <- list()
comp_list <- list()
# First comp model - OLS direct effects
indvars <- select_at(run_data, vars(contains("_s")))
comp_list$model1=lm(run_data$test_pcntl ~ ., data=indvars)
rm(indvars)
CompResultsTable=stargazer(comp_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
# RunT (terminal)
int_list$modelT=lm(run_data$test_pcntl ~ ., data=decor_data)
comp_list$modelT=lm(run_data$test_pcntl ~ ., data=decor_data)
#summary(int_list$model2)
IntResultsTable=stargazer(int_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
CompResultsTable=stargazer(comp_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, report="vc*")
CompResultsTable=stargazer(comp_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, column.labels=c("OLS
CompResultsTable=stargazer(comp_list,title="Intermediate Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, column.labels=c("OLS","Ext. Laplace"), report="vc*")
CompResultsTable=stargazer(comp_list,title="Comparison Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, column.labels=c("OLS","Ext. Laplace"), report="vc*")
CompResultsTable=stargazer(comp_list,title="Comparison Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = TRUE, column.labels=c("OLS","Ext. Laplace"), report="vc*")
CompResultsTable=stargazer(comp_list,title="Comparison Results",type='text',no.space=TRUE,omit.stat=c("LL","aic","f","wald","adj.rsq", "ser","n"),model.names = FALSE, column.labels=c("OLS (DE)","Ext. Laplace (TE)"), report="vc*")
c_list <- colnames(select_at(run_data, vars(contains("_s"))))
for(i in c_list) {print(i)}
for(i in c_list) {
run_data$i <-  run_data$i
}
for(i in c_list) {
run_data$i <-  run_data$i
}
head(run_data, 5)
for(i in c_list) {
run_data$i <-  sapply(run_data$i, function(x) scale(x, scale=FALSE))
}
identifiers <- select_at(run_data, vars(contains("cpuid", "momid")))
# SAVE participant identifier data frame for later join with decorrelated data
identifiers <- select_at(run_data, vars("cpuid", "momid"))
# SAVE participant identifier data frame for later join with decorrelated data
identifiers <- select_at(run_data, vars("cpubid", "momid"))
run_data <- subset(run_data, select=-c("cpubid", "momid"))
subset(run_data, select(run_data, -c("cpubid", "momid"))
subset(run_data, select(run_data, -c(cpubid, momid))
subset(run_data, select(-c(cpubid, momid))
run_data <- subset(run_data, select(-c(cpubid, momid))
run_data <- subset(run_data, select(-c(cpubid, momid)))
subset(run_data, select(-c(cpubid, momid)))
subset(run_data, select(-c("cpubid", "momid")))
run_data <- select(run_data, contains("cpubid", "momid"))
run_data <- select(run_data, contains("cpubid"))
run_data <- select_at(run_data, -vars("cpubid"))
run_data2 <- select_at(run_data, vars("cpubid"))
run_data2 <- select_at(run_data, -vars("cpubid"))
run_data2 <- select(run_data, -vars("cpubid"))
run_data2 <- select(run_data, -starts_with("cpubid"))
run_data2 <- select(run_data, -starts_with("cpubid","momid"))
identifiers <- select_at(run_data, -vars("cpubid", "momid"))
run_data2 <- select(run_data, -starts_with("cpubid"))
Load data
```{r}
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
```
User preferences
```{r}
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
```
# SAVE participant identifier data frame for later join with decor data and drop
identifiers <- select_at(run_data, vars("cpubid", "momid"))
run_data2 <- select(run_data, -starts_with("cpubid"))
run_data <- select(run_data, -starts_with("cpubid"))
run_data <- select(run_data, -starts_with("momid"))
run_data <- select(run_data, -ends_with("id"))
Load data
```{r}
# Clear Global Environment
rm(list = ls())
#Load Data
run_data            <- read.delim('C:/data/laplace/R/Laplace_NLSY_data.csv')
#head(run_data, 5)
```
User preferences
```{r}
# Set covaraiate retention threshold
# Drops covariates explained (R^2) greater than stated tolerance
# Set to 1.0 for no drops, 0.99 to drop when R^2 greater than 0.99
collin_tolerance		<- 0.99
# Set results table print choice
# Table 2 - (save_intermediate=0) Results table compares OLS direct effects to Laplace total effects
# Table 3 - (save_intermediate=1) Intermediate regression results (all) - too large for some screen display
save_intermediate   <- 1
```
# SAVE participant identifier data frame for later join with decor data and drop
identifiers <- select_at(run_data, vars("cpubid", "momid"))
run_data <- select(run_data, -ends_with("id"))
# ORDER
col_order <- c("year2", "year3", "year4", "year5", "year6", "year7", "year8", "year9", "year10", "year11", "year12", "year13", "year14", "year15", "momrace1", "momrace2", "mage", "mom_grade", "momtest", "spouse_yn", "spouse_age", "spouse_grade", "csex2", "childage", "family_size", "fincome", "test_pcntl")
run_data <- run_data[, col_order]
run_data <- run_data[, col_order]
# Create decor_data (to designate block names and run model)
# Group 0 - fixed effects
run_data <- rename_at(run_data, vars( contains("year") ), list( ~paste0(., "_sim0") ) )
# Group 1 - race effects
run_data <- rename_at(run_data, vars( contains("momrace") ), list( ~paste0(., "_sim1") ) )
# Group2 - mother characteristics
run_data <- rename_at(run_data, vars( mage:momtest), list( ~paste0(., "_seq2") ) )
# Group 3 - spousal characteristics
run_data <- rename_at(run_data, vars( contains("spouse_") ), list( ~paste0(., "_sim3") ) )
# Group4 - remaining covariates
run_data <- rename_at(run_data, vars( csex2:fincome), list( ~paste0(., "_seq4") ) )
df_new <- sapply(run_data, function(x) scale(x, scale=FALSE))
head(df_new, 3)
head(run_data, 3)
sumtable(run_data)
install.packages(c("tidyverse", 'dplyr', 'stargzer', 'vtable'))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
library(vtable)
st(run_data)
#Install if it's your first run
first_run <- 1
if (first_run) {
# Clear Global Environment
rm(list = ls())
install.packages(c("tidyverse", 'dplyr', 'stargzer', 'vtable'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
library(vtable)
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
#Install if it's your first run
first_run <- 1
if (first_run) {
# Clear Global Environment
rm(list = ls())
install.packages(c("tidyverse", 'dplyr', 'stargzer', 'vtable'))
} #End if first_run
# # Libraries
library(tidyverse)
library(dplyr)
library(stargazer)
library(vtable)
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages(c("tidyverse", "dplyr", "stargzer", "vtable"))
install.packages("tidyverse", 'dplyr', 'stargzer', 'vtable')
install.packages("tidyverse", "dplyr", "stargzer", "vtable")
install.packages("vtable")
library(vtable)
install.packages("vtable")
install.packages(c("tidyverse", "dplyr", "stargzer"))
install.packages(c("tidyverse", "dplyr", "stargzer"))
install.packages(c("tidyverse", "dplyr", "stargzer"))
install.packages(c("tidyverse", "dplyr", "stargzer"))
install.packages(c("tidyverse", "dplyr", "stargzer"))
install.packages(c("tidyverse", "dplyr", "stargzer"))
library(stargazer)
install.packages(c("tidyverse", "dplyr", "stargazer"))
install.packages(c("tidyverse", "dplyr", "stargazer"))
install.packages(c("tidyverse", "dplyr", "stargazer"))
library(stargazer)
install.packages("stargazer")
install.packages("stargazer")
#Install if it's your first run
first_run <- 1
if (first_run) {
# Clear Global Environment
rm(list = ls())
install.packages("tidyverse")
install.packages("dplyr")
install.packages("stargazer")
install.packages("vtable")
} #End if first_run
